###ESERCIZIO 1###

# complessita O(n*log(n))


def count(arr: list, key: int, down: int, up: int):
    # se down è piu grande di up significa che il vettore non è valido
    # se il controllo non trova la key ritorna 0
    if down > up or (down == up and arr[down-1] != key):
        return 0

    # se il controllo trova la key e down è uguale ad up siamo al caso base ritornando 1
    if down == up and arr[down-1] == key:
        return 1

    # controllo nel sottoarray di sinistra e nel sotto array di destra e sommo
    return count(arr, key, down, (down+up)//2) + count(arr, key, (down+up)//2+1, up)


file = open(r"C:\Users\Nico\Documents\GitHub\Esercizio1\nico\in1.txt", "r")
line = int(file.readline())
i = 0

while i < line:
    array = file.readline()
    array = array.split(" ")
    array = [int(x) for x in array]
    key = array[0]
    array = array[2::]
    i += 1
    print(count(array, key, 0, len(array)))



###ESERCIZIO 2###


#stampa tutte le permutazioni dei valori possibili ma stampa le liste corrette

import math

file = open(r"C:\Users\Nico\Documents\GitHub\Esercizio1\nico\in2.txt", "r")
line = int(file.readline())
i = 0


def is_prime(x: int):
    radice = int(math.sqrt(x))

    if x == 1:
        return False

    if x == 2:
        return True

    for i in range(2, radice + 1):
        if x % i == 0:
            return False

    return True


ans = []
prime = []


def somma(total: int, N: int, S: int, index: int):

    global ans, prime

    # soluzione trovata
    if total == S and len(ans) == N:
        for i in range(len(ans)):
            print(ans[i], end=" ")
        print()
        return

    # somma totale superata
    if total > S or index == len(prime):
        return

    ans.append(prime[index])

    # provo aggiungendo il prossimo numero primo
    somma(total + prime[index], N, S, index + 1)

    ans.pop()

    # se mi trovo qui non era corretto il numero appena aggiunto
    somma(total, N, S, index + 1)


def allPrime(N: int, S: int, P: int):

    global ans, prime

    for i in range(P + 1, S + 1):
        if (is_prime(i)):
            prime.append(i)

    if len(prime) < N:
        return

    somma(0, N, S, 0)


while i < line:
    arr = file.readline()
    arr = arr.split(" ")
    S = int(arr[0])
    N = int(arr[1])
    P = int(arr[2])

    print("CASO DI TEST " + str(i+1))
    allPrime(N, S, P)

    i += 1


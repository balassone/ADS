ESERCIZIO 1



//L'algoritmo è log(n) supponendo che il vettore è inserito in modo ordinato 
//
//Utilizzo la ricerca binaria al fine di trovare gli indici della prima e dell'ultima occorrenza ,dopodichè ne fa la sottrazione e cosi ho il valore delle occorrenze

import java.util.Scanner;
public class Esercizio1 {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan = new Scanner(System.in);
		int T = scan.nextInt();
		while (T-- > 0) {
			int K = scan.nextInt();
			int N = scan.nextInt();
			int[] array = new int[N];
			for (int i = 0; i < N; i++) {

				array[i] = scan.nextInt();

			}
			
			int occurrences = findoccurences(K, array, N);
			System.out.println(occurrences);
		}
	}
	
	public static int findoccurences(int K,int[]array,int N) {
		int occorrenze=0;
		int prima_occorrenza=0;
		int ultima_occorrenza=0;
		//supposto il vettore ordinato, calcolo il numero di occorrenze usando gli indici della prima e ultima occorrenza
		//se non ce ne sono ritorno 0
		prima_occorrenza=prima(array,0,N-1,K,N);
		//Se non ho una prima occorrenza vuol dire che non ne ho affatto,ovvero ho 0 occorrenze
		if(prima_occorrenza==-1) {
			
			return 0;
			}
		ultima_occorrenza=ultima(array, prima_occorrenza, N-1, K,N );
		return occorrenze=ultima_occorrenza-prima_occorrenza+1;
	}


	static int prima(int array[], int l, int h, int K, int N) {
		if (h >= l) {

			int mid = (l + h) / 2;
			if ((mid == 0 || K > array[mid - 1]) && array[mid] == K)
				return mid;
			else if (K > array[mid])
				return prima(array, (mid + 1), h, K, N);
			else
				return prima(array, l, (mid - 1), K, N);
		}
		return -1; 
	}

	static int ultima(int array[], int l, int h, int K, int N) {
		if (h >= l) {

			int mid = (l + h) / 2;
			if ((mid == N - 1 || K < array[mid + 1]) && array[mid] == K)
				return mid;
			else if (K < array[mid])
				return ultima(array, l, (mid - 1), K, N);
			else
				return ultima(array, (mid + 1), h, K, N);
		}
		return -1;
	}
}



ESERCIZIO 2


import java.util.*;

public class Esercizio2Driver {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan=new Scanner(System.in);
		int T=scan.nextInt();
		while(T-->0) {
			int S=scan.nextInt();
			int N=scan.nextInt();
			int P=scan.nextInt();
		}

	}
	
public static boolean isSafe(){

}


public static void PrimeSolver(){
//passo base



//prova candidati




//backtrack

}	

}	
